<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>叶颂</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yesong17.github.io/"/>
  <updated>2020-03-09T14:56:41.173Z</updated>
  <id>https://yesong17.github.io/</id>
  
  <author>
    <name>Ys</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>awk用法</title>
    <link href="https://yesong17.github.io/2020/03/09/awk%E7%94%A8%E6%B3%95/"/>
    <id>https://yesong17.github.io/2020/03/09/awk用法/</id>
    <published>2020-03-09T13:30:50.000Z</published>
    <updated>2020-03-09T14:56:41.173Z</updated>
    
    <content type="html"><![CDATA[<h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><p><strong>awk</strong>是一种编程语言，用于在linux/unix下对文本和数据进行处理。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。</p><p><strong>awk</strong>语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;pattern + action&#125;' &#123;filenames&#125;</span><br></pre></td></tr></table></figure><ul><li>pattern [正则]表示 AWK 在数据中查找的内容</li><li>action 是在找到匹配内容时所执行的一系列命令</li><li>花括号（{}）不需要在程序中始终出现，但它们用于根据特定的<strong>模式</strong>对一系列指令进行分组。</li></ul><p><strong>模式</strong>可以是任何条件语句或复合语句或正则表达式，模式包含两个特殊字段 BEGIN 和 END，使用 BEGIN 语句设置计数和打印头，BEGIN 语句使用在任何文本浏览动作之前，之后文本浏览动作依据输入文件开始执行;END 语句用来在 awk 完成文本浏览动作后打印输出文本总数和结尾状态标志，有动作必须使用{}括起来</p><h4 id="awk执行过程分析"><a href="#awk执行过程分析" class="headerlink" title="awk执行过程分析"></a>awk执行过程分析</h4><ol><li><p>执行BEGIN { commands } pattern 语句块中的语句。</p><p>​        BEGIN语句块：在awk开始从输入输出流中读取行之前执行，在BEGIN语句块中执行如变量初始化，打印输出表头等操作。</p></li><li><p>从文件或标准输入中读取一行，然后执行pattern{ commands }语句块。它逐行扫描文件，从第一行到最后一行重复这个过程，直到全部文件都被读取完毕。</p><p>​        pattern语句块：pattern语句块中的通用命令是最重要的部分，它也是可选的。如果没有提供pattern语句块，则默认执行{ print }，即打印每一个读取到的行。{ }类似一个循环体，会对文件中的每一行进行迭代，通常将变量初始化语句放在BEGIN语句块中，将打印结果等语句放在END语句块中。</p></li><li><p>当读至输入流末尾时，执行END { command }语句块。</p><p>​        END语句块:在awk从输入流中读取完所有的行之后即被执行，比如打印所有行的分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块。</p></li></ol><p><strong>注</strong>：awk 执行时，其浏览标记为$1，$2…$n，这种方法称为域标记。使用$1，$3 表示参照第 1 和第 3 域，注意这里使用逗号分隔域，使用$0 表示使用所有域。</p><h4 id="AWK内置变量"><a href="#AWK内置变量" class="headerlink" title="AWK内置变量"></a>AWK内置变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">n : 当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。</span></span><br><span class="line"><span class="meta">$</span><span class="bash">0 : 这个变量包含执行过程中当前行的文本内容。</span></span><br><span class="line">ARGC : 命令行参数的数目。</span><br><span class="line">ARGIND : 命令行中当前文件的位置（从0开始算）。</span><br><span class="line">ARGV : 包含命令行参数的数组。</span><br><span class="line">CONVFMT : 数字转换格式（默认值为%.6g）。</span><br><span class="line">ENVIRON : 环境变量关联数组。</span><br><span class="line">ERRNO : 最后一个系统错误的描述。</span><br><span class="line">FIELDWIDTHS : 字段宽度列表（用空格键分隔）。</span><br><span class="line">FILENAME : 当前输入文件的名。</span><br><span class="line">NR : 表示记录数，在执行过程中对应于当前的行号</span><br><span class="line">FNR : 同NR :，但相对于当前文件。</span><br><span class="line">FS : 字段分隔符（默认是任何空格）。</span><br><span class="line">IGNORECASE : 如果为真，则进行忽略大小写的匹配。</span><br><span class="line">NF : 表示字段数，在执行过程中对应于当前的字段数。 print $NF答应一行中最后一个字段</span><br><span class="line">OFMT : 数字的输出格式（默认值是%.6g）。</span><br><span class="line">OFS : 输出字段分隔符（默认值是一个空格）。</span><br><span class="line">ORS : 输出记录分隔符（默认值是一个换行符）。</span><br><span class="line">RS : 记录分隔符（默认是一个换行符）。</span><br><span class="line">RSTART : 由match函数所匹配的字符串的第一个位置。</span><br><span class="line">RLENGTH : 由match函数所匹配的字符串的长度。</span><br><span class="line">SUBSEP : 数组下标分隔符（默认值是34）。</span><br></pre></td></tr></table></figure><h4 id="awk运算"><a href="#awk运算" class="headerlink" title="awk运算"></a>awk运算</h4><ul><li>算术运算：（+，-，*，/，&amp;，！，……，++，–）</li></ul><p>所有用作算术运算符进行操作时，操作数自动转为数值，所有非数值都变为0</p><ul><li>赋值运算：（=， +=， -=，*=，/=，%=，……=，**=）</li><li>逻辑运算符: (||, &amp;&amp;)</li><li>关系运算符：（&lt;, &lt;=, &gt;,&gt;=,!=, ==）</li><li>正则运算符：（～，～!）(匹配正则表达式，与不匹配正则表达式)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;a="100testa";if(a ~ /^100*/)&#123;print "ok";&#125;&#125;'</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h5 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h5><p>&lt;、&lt;=、==、!=、&gt;=、~匹配正则表达式、!~不匹配正则表达式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">匹配: awk '&#123;if ($4~/ASIMA/) print $0&#125;' temp 表示如果第四个域包含 ASIMA，就打印整条</span><br><span class="line">精确匹配:awk '$3=="48" &#123;print $0&#125;' temp    只打印第 3 域等于"48"的记录</span><br><span class="line">不匹配:  awk '$0 !~ /ASIMA/' temp      打印整条不包含 ASIMA 的记录</span><br><span class="line">不等于:  awk '$1 != "asima"' temp</span><br><span class="line">小于:    awk '&#123;if ($1&lt;$2) print $1 "is smaller"&#125;' temp</span><br><span class="line">设置大小写: awk '/[Gg]reen/' temp      打印整条包含 Green，或者 green 的记录</span><br><span class="line">任意字符: awk '$1 ~/^...a/' temp    打印第 1 域中第四个字符是 a 的记录，符号’^’代表行首，符合’.’代表任意字符</span><br><span class="line">或关系匹配: awk '$0~/(abc)|(efg)/' temp   使用|时，语句需要括起来</span><br><span class="line">AND 与关系:  awk '&#123;if ( $1=="a" &amp;&amp; $2=="b" ) print $0&#125;' temp</span><br><span class="line">OR 或关系:   awk '&#123;if ($1=="a" || $1=="b") print $0&#125;' temp</span><br></pre></td></tr></table></figure><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><ul><li>打开文件 open(“filename”)</li><li>关闭文件 close(“filename”)</li><li>输出到文件 重定向到文件，如echo | awk ‘{printf(“hello word!n”) &gt; “datafile”}’</li></ul><h4 id="将外部变量值传递给awk"><a href="#将外部变量值传递给awk" class="headerlink" title="将外部变量值传递给awk"></a>将外部变量值传递给awk</h4><ul><li>借助 -v 选项，可以将来自外部值（非stdin）传递给awk       </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VAR=10000</span><br><span class="line">echo | awk -v VARIABLE=$VAR '&#123; print VARIABLE &#125;'</span><br></pre></td></tr></table></figure><ul><li>定义内部变量接收外部变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1="aaa"</span><br><span class="line">var2="bbb"</span><br><span class="line">echo | awk '&#123; print v1,v2 &#125;' v1=$var1 v2=$var2</span><br></pre></td></tr></table></figure><ul><li>当输入来自文件时</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123; print v1,v2 &#125;' v1=$var1 v2=$var2 filename</span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>在awk中数组叫做<strong>关联数组</strong>(associative arrays)。awk 中的数组不必提前声明，也不必声明大小。数组元素用0或空字符串来初始化，这根据上下文而定。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;print $0&#125;' temp.txt &gt; sav.txt       表示打印所有域并把结果重定向到 sav.txt 中</span><br><span class="line">awk '&#123;print $0&#125;' temp.txt|tee sav.txt     和上例相似，不同的是将在屏幕上显示出来</span><br><span class="line">awk '&#123;print $1,$4&#125;' temp.txt            只打印出第 1 和第 4 域</span><br><span class="line">awk 'BEGIN &#123;print "NAME  GRADE\n----"&#125; &#123;print $1"\t"$4&#125;' temp.txt       </span><br><span class="line">--表示打信息头，即输入的内容的第一行前加上"NAME  GRADE\n-------------"，同时内容以 tab 分开</span><br><span class="line">awk 'BEGIN &#123;print "being"&#125; &#123;print $1&#125; END &#123;print "end"&#125;' temp      同时打印信息头和信息尾</span><br><span class="line">awk -F ：'&#123;print $1,$4&#125;'          使用‘：’来分割这一行，把这一行的第一第四个域打印出来 。</span><br><span class="line">match(s，r)             测试s是否包含匹配r的字符串</span><br><span class="line">字符转换: echo "65" |awk '&#123;printf "%c\n"，$0&#125;'    输出A</span><br><span class="line">awk 'BEGIN &#123;printf "%f\n"，999&#125;'        输出999.000000</span><br><span class="line">格式化输出:awk '&#123;printf "%-15s %s\n"，$1，$3&#125;' temp 将第一个域全部左对齐显示</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">找一个实操文件：  cp /etc/passwd ~</span><br><span class="line">打印2-5行：        nl passwd | sed -n '2,5p'</span><br><span class="line">打印奇数行：      nl passwd | sed -n '1~2p'</span><br><span class="line">"root" 全局替换为 "test"，并只打印替换的那一行：        sed -n 's/root/test/gp' passwd</span><br><span class="line">找出 root 的那一行并计算行号：      nl passwd | grep 'root'</span><br><span class="line">将 root 替换为 www.root.com：</span><br><span class="line"></span><br><span class="line">打印想要的数据列：</span><br><span class="line"></span><br><span class="line">格式：awk '/匹配串/ &#123;for(i=1;i&lt;=NF;i++) if($i ~ /字符串/) print $i i&#125;' $filename</span><br><span class="line">awk '/匹配串/ &#123;for(i=1;i&lt;=NF;i++) if($i ~ /(字符串1|...|字符串n)/) print $i i&#125;' $filename</span><br><span class="line">例子：awk '/WEB_TILE/ &#123;for(i=1;i&lt;=NF;i++) if($i ~ /(双线|单线)/) print $i i&#125;' t_config.txt</span><br><span class="line"></span><br><span class="line">打印某个域后的所有域（已知域个数）：【查看：cat file.txt】</span><br><span class="line">awk '&#123;for(i=4;i&lt;=NF;i++) printf"%s ",$i&#125; &#123;print ""&#125;' file.txt</span><br><span class="line">X1 X2 X3</span><br><span class="line">X1 X2 X3 X4 X5</span><br><span class="line">X1 X2 X3 X4 X5 X6</span><br><span class="line">这样的数据不够四行的，问题：将会打印出一个空行；在输出的结果中，每行结尾多了一个空格；</span><br><span class="line">解决：</span><br><span class="line">awk 'NF&gt;4 &#123;for (i=4;i&lt;=NF;i++) &#123;printf $i" "&#125;printf "\n"&#125;' file.txt</span><br><span class="line">这个也行：cat file.txt |awk 'NF&gt;4 &#123;a=index($0,$4);print substr($0,a)&#125;'</span><br><span class="line"></span><br><span class="line">利用域值替换     //前3个域用字母a替换:</span><br><span class="line">awk 'NF&gt;4 &#123; for(i=1;i&lt;=3;i++)&#123;$i="a"&#125;; print $0 &#125;' file.txt</span><br><span class="line"></span><br><span class="line">awk打印倒数第2列:</span><br><span class="line">cat 1-iplist.txt | awk '&#123; print $(NF-2) &#125;'|wc</span><br><span class="line">awk -F":" '&#123;print $2,$(NF),$(NF-1),$(NF-3)&#125;' /etc/passwd</span><br><span class="line"></span><br><span class="line">例如:我们需要查看 包含 sbin的进程 中的PID号:ps aux | grep sbin</span><br><span class="line">只过滤出所有的PID号：ps aux | grep sbin | awk '&#123;print $2&#125;'</span><br><span class="line">只获取前三行PID号：  【使用命令sed -n 指定行数；-n '2p':第二行；-n '1,3p':第一至三行】</span><br><span class="line">ps aux | grep sbin | awk '&#123;print $2&#125;' | sed -n '1,3p'</span><br><span class="line"></span><br><span class="line">打印文本文件的总行数 ： awk 'END&#123;print NR&#125;' filename</span><br><span class="line">打印文本第二行第一列 ：sed -n "2, 1p" filename | awk 'print $1'</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;awk&quot;&gt;&lt;a href=&quot;#awk&quot; class=&quot;headerlink&quot; title=&quot;awk&quot;&gt;&lt;/a&gt;awk&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;awk&lt;/strong&gt;是一种编程语言，用于在linux/unix下对文本和数据进行处理。它支持用户自定义函数和动态
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://yesong17.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>游标正例</title>
    <link href="https://yesong17.github.io/2020/03/07/%E6%B8%B8%E6%A0%87%E6%AD%A3%E4%BE%8B/"/>
    <id>https://yesong17.github.io/2020/03/07/游标正例/</id>
    <published>2020-03-07T05:44:40.000Z</published>
    <updated>2020-03-07T06:53:50.181Z</updated>
    
    <content type="html"><![CDATA[<h3 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h3><p><strong>游标</strong>（cursor）是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果。<br>每个游标区都有一个名字,用户可以用SQL语句逐一从游标中获取记录，并赋给主变量，交由主语言进一步处理。</p><p><strong>游标</strong>是处理结果集的一种机制吧，它可以定位到结果集中的某一行，多数据进行读写，也可以移动游标定位到你所需要的行中进行操作数据。一般复杂的存储过程，都会有游标的出现，他的用处主要有：</p><ol><li>定位到结果集中的某一行。</li><li>对当前位置的数据进行读写。</li><li>可以对结果集中的数据单独操作，而不是整行执行相同的操作。</li><li>是面向集合的数据库管理系统和面向行的程序设计之间的桥梁。</li></ol><ul><li>%ISOPEN 检测游标是否打开。</li><li>%FOUND 检测游标结果集是否存在数据。</li><li>%NOTFOUND是否不存在数据。</li><li>%ROWCOUNT游标已提取的实际行数。</li></ul><p><strong>注：</strong></p><p>​        在能够使用游标前，必须声明/定义它，过程中没有检索数据，只是定义要使用的select语句一旦声明就必须打开游标 开始检索数据对于填有数据的游标，根据需要检索各行 取出数据必须关闭游标 再删除游标使用声明过的游标不需要再次声明，open打开就行了（只要没deallocate就行）</p><ul><li><font color="orangered">%FOUND </font> 检测游标结果集是否存在数据。</li><li><font color="orangered">%NOTFOUND</font>  是否不存在数据。</li><li><font color="orangered">%ROWCOUNT</font> 游标已提取的实际行数。</li></ul><p><strong>建立临时数据表</strong></p><p>create table #tmp (Id NVARCHAR(MAX),UserName NVARCHAR(MAX),Password NVARCHAR(MAX),NickName NVARCHAR(MAX)) –创建临时表<br>SELECT * FROM #tmp; –查询临时表<br>DROP TABLE #tmp –删除临时表 </p><p><strong>游标的生命周期</strong></p><p>​        游标的生命周期包含有五个阶段：声明游标、打开游标、读取游标数据、关闭游标、释放游标。</p><h5 id="1、游标格式"><a href="#1、游标格式" class="headerlink" title="1、游标格式"></a>1、游标格式</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--声明游标</span></span><br><span class="line"><span class="keyword">DECLARE</span> cursor_name <span class="keyword">CURSOR</span> [ <span class="keyword">LOCAL</span> | <span class="keyword">GLOBAL</span> ] </span><br><span class="line">     [ FORWARD_ONLY | <span class="keyword">SCROLL</span> ] </span><br><span class="line">     [ <span class="keyword">STATIC</span> | KEYSET | DYNAMIC | FAST_FORWARD ] </span><br><span class="line">     [ READ_ONLY | SCROLL_LOCKS | OPTIMISTIC ] </span><br><span class="line">     [ TYPE_WARNING ] </span><br><span class="line">     <span class="keyword">FOR</span> select_statement </span><br><span class="line">     [ <span class="keyword">FOR</span> <span class="keyword">UPDATE</span> [ <span class="keyword">OF</span> column_name [ ,...n ] ] ]</span><br><span class="line"><span class="comment">--打开游标语法</span></span><br><span class="line"><span class="keyword">open</span> [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"><span class="comment">--提取游标语法</span></span><br><span class="line"><span class="keyword">Fetch</span></span><br><span class="line">[ [<span class="keyword">Next</span>|<span class="keyword">prior</span>|Frist|<span class="keyword">Last</span>|Absoute n|<span class="keyword">Relative</span> n ]</span><br><span class="line"><span class="keyword">from</span> ]</span><br><span class="line">[<span class="keyword">Global</span>] cursor_name</span><br><span class="line">[<span class="keyword">into</span> @variable_name[,....]]</span><br><span class="line"><span class="comment">--关闭游标语法</span></span><br><span class="line"><span class="keyword">close</span> [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"><span class="comment">--释放游标语法</span></span><br><span class="line"><span class="keyword">deallocate</span>  [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--游标修改当前数据语法</span></span><br><span class="line"><span class="keyword">Update</span> 基表名 <span class="keyword">Set</span> 列名=值[,...] <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span> 游标名</span><br><span class="line"><span class="comment">--游标删除当前数据语法</span></span><br><span class="line"><span class="keyword">Delete</span> 基表名  <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span> 游标名</span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><table><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>cursor_name</td><td>游标名称</td></tr><tr><td>Local</td><td>作用域为局部，只在定义它的批处理，存储过程或触发器中有效。</td></tr><tr><td>Global</td><td><font size="2">作用域为全局，由连接执行的任何存储过程或批处理中，都可以引用该游标。</font></td></tr><tr><td>[Local/Global]</td><td>默认为local。</td></tr><tr><td>Forward_Only</td><td>指定游标智能从第一行滚到最后一行。Fetch Next是唯一支持的提取选项。如果在指定Forward_Only是不指定Static、KeySet、Dynamic关键字，默认为Dynamic游标。如果Forward_Only和Scroll没有指定，Static、KeySet、Dynamic游标默认为Scroll，Fast_Forward默认为Forward_Only</td></tr><tr><td>Static</td><td>静态游标</td></tr><tr><td>KeySet</td><td>键集游标</td></tr><tr><td>Dynamic</td><td>动态游标，不支持Absolute提取选项</td></tr><tr><td>Fast_Forward</td><td>指定启用了性能优化的Forward_Only、Read_Only游标。如果指定啦Scroll或For_Update，就不能指定他啦。</td></tr><tr><td>Read_Only</td><td>不能通过游标对数据进行删改。</td></tr><tr><td>Scroll_Locks</td><td>将行读入游标是，锁定这些行，确保删除或更新一定会成功。如果指定啦Fast_Forward或Static，就不能指定他啦。</td></tr><tr><td>Optimistic</td><td>指定如果行自读入游标以来已得到更新，则通过游标进行的定位更新或定位删除不成功。当将行读入游标时，sqlserver不锁定行，它改用timestamp列值的比较结果来确定行读入游标后是否发生了修改，如果表不行timestamp列，它改用校验和值进行确定。如果已修改改行，则尝试进行的定位更新或删除将失败。如果指定啦Fast_Forward,则不能指定他。</td></tr><tr><td>Type_Warning</td><td>指定将游标从所请求的类型隐式转换为另一种类型时向客户端发送警告信息。</td></tr><tr><td>For Update[of column_name ,….]</td><td>定义游标中可更新的列。</td></tr><tr><td>Frist/Last</td><td>结果集的第一行/最后一行</td></tr><tr><td>Prior/Next</td><td>当前位置的上一行/当前位置的下一行</td></tr><tr><td>Absoute n</td><td>从游标的第一行开始数，第n行</td></tr><tr><td>Relative n</td><td>从当前位置数，第n行</td></tr><tr><td>Into @variable_name[,…]</td><td>将提取到的数据存放到变量variable_name中</td></tr></tbody></table><p><strong>fetch状态</strong></p><p> 0：Fetch语句成功。<br>-1：Fetch语句失败或行不在结果集中。<br>-2：提取的行不存在。</p><p>这个状态值可以帮你判断提取数据的成功与否。</p><p><strong>提取数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--提取数据</span></span><br><span class="line">fetch first from orderNum_02_cursor</span><br><span class="line">fetch relative 3 from orderNum_02_cursor</span><br><span class="line">fetch next from orderNum_02_cursor</span><br><span class="line">fetch absolute 4 from orderNum_02_cursor</span><br><span class="line">fetch next from orderNum_02_cursor</span><br><span class="line">fetch last from orderNum_02_cursor </span><br><span class="line">fetch prior from orderNum_02_cursor</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--提取数据赋值给变量</span></span><br><span class="line"><span class="keyword">declare</span> @OrderId <span class="built_in">int</span></span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">absolute</span> <span class="number">3</span> <span class="keyword">from</span> orderNum_02_cursor <span class="keyword">into</span> @OrderId</span><br><span class="line"><span class="keyword">select</span> @OrderId <span class="keyword">as</span> <span class="keyword">id</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span></span><br></pre></td></tr></table></figure><h5 id="2、示例1"><a href="#2、示例1" class="headerlink" title="2、示例1"></a>2、示例1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 循环检索数据 </span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_num <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> orders_cursor <span class="keyword">CURSOR</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> order_num;</span><br><span class="line">OPEN orders_cursor;</span><br><span class="line">FETCH NEXT FROM orders_cursor INTO @order_num;</span><br><span class="line">WHILE @@FETCH_STATUS=0</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> orders_cursor <span class="keyword">INTO</span> @order_num;</span><br><span class="line"><span class="keyword">END</span>；</span><br><span class="line"><span class="keyword">CLOSE</span> orders_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> orders_cursor;</span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------------------</span></span><br><span class="line"><span class="comment">-- 进一步对数据实际处理</span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_num <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @order_total MONEY;  <span class="comment">--每个订单合计</span></span><br><span class="line"><span class="keyword">DECLARE</span> @total MONEY;    <span class="comment">--总合计</span></span><br><span class="line"><span class="keyword">SET</span> @total=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> orders_cursor <span class="keyword">CURSOR</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> order_num;</span><br><span class="line">OPEN orders_cursor;</span><br><span class="line"><span class="comment">-- fetch取每一个@order_num</span></span><br><span class="line">FETCH NEXT FROM orders_cursor INTO @order_num;</span><br><span class="line">WHILE @@FETCH_STATUS=0</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- 执行存储过程计算每个订单合计存入@order_total</span></span><br><span class="line">EXEC ordertotal @order_num,<span class="number">1</span>,@order_total <span class="keyword">OUTPUT</span> </span><br><span class="line"><span class="comment">-- 每检索一个@order_total就set到@total上</span></span><br><span class="line"><span class="keyword">SET</span> @total=@total+@order_total</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> orders_cursor <span class="keyword">INTO</span> @order_num;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> orders_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> orders_cursor;</span><br><span class="line"><span class="comment">-- 返回结果</span></span><br><span class="line"><span class="keyword">SELECT</span> @total <span class="keyword">AS</span> GrantTotal;</span><br></pre></td></tr></table></figure><p><strong>注：</strong><a href="https://yesong17.github.io/2020/02/28/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/#more" target="_blank">存储过程：例子1</a></p><h5 id="3、示例2"><a href="#3、示例2" class="headerlink" title="3、示例2"></a>3、示例2</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1.声明游标</span></span><br><span class="line"><span class="keyword">declare</span> orderNum_03_cursor <span class="keyword">cursor</span> <span class="keyword">scroll</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">select</span> OrderId ,userId <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span>)</span><br><span class="line"><span class="comment">--2.打开游标</span></span><br><span class="line"><span class="keyword">open</span> orderNum_03_cursor</span><br><span class="line"><span class="comment">--3.声明游标提取数据所要存放的变量</span></span><br><span class="line"><span class="keyword">declare</span> @OrderId <span class="built_in">int</span> ,@userId <span class="built_in">varchar</span>(<span class="number">15</span>)</span><br><span class="line"><span class="comment">--4.定位游标到哪一行</span></span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">First</span> <span class="keyword">from</span> orderNum_03_cursor <span class="keyword">into</span> @OrderId,@userId  <span class="comment">--into的变量数量必须与游标查询结果集的列数相同</span></span><br><span class="line"><span class="keyword">while</span> @@fetch_status=<span class="number">0</span>  <span class="comment">--提取成功，进行下一条数据的提取操作 </span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">if</span> @OrderId=<span class="number">122182</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">Update</span> bigorder <span class="keyword">Set</span> UserId=<span class="string">'123'</span> <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span>  orderNum_03_cursor  <span class="comment">--修改当前行</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">if</span> @OrderId=<span class="number">154074</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">      <span class="comment">--删除当前行</span></span><br><span class="line">      <span class="keyword">Delete</span> bigorder <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span>  orderNum_03_cursor  </span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">   <span class="comment">--移动游标</span></span><br><span class="line">   <span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> orderNum_03_cursor <span class="keyword">into</span> @OrderId ,@userId </span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">close</span> orderNum_03_cursor</span><br><span class="line"><span class="comment">--释放游标</span></span><br><span class="line"><span class="keyword">deallocate</span> orderNum_03_cursor</span><br></pre></td></tr></table></figure><p><strong>更多详情请参考</strong><a href="https://www.cnblogs.com/xiongzaiqiren/p/sql-cursor.html" target="_blank">这里 !!</a></p><p><a href="https://www.cnblogs.com/lsgsanxiao/p/10878539.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsgsanxiao/p/10878539.html</a><br><a href="https://blog.csdn.net/wanlong360599336/article/details/52415420" target="_blank" rel="noopener">https://blog.csdn.net/wanlong360599336/article/details/52415420</a><br><a href="https://blog.csdn.net/qq_40741855/article/details/89154073" target="_blank" rel="noopener">https://blog.csdn.net/qq_40741855/article/details/89154073</a><br><a href="https://blog.csdn.net/wanlong360599336/article/details/52438695" target="_blank" rel="noopener">https://blog.csdn.net/wanlong360599336/article/details/52438695</a><br><a href="https://blog.csdn.net/ghjghjghj1231/article/details/83724537" target="_blank" rel="noopener">https://blog.csdn.net/ghjghjghj1231/article/details/83724537</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;游标&quot;&gt;&lt;a href=&quot;#游标&quot; class=&quot;headerlink&quot; title=&quot;游标&quot;&gt;&lt;/a&gt;游标&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;游标&lt;/strong&gt;（cursor）是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果。&lt;br&gt;每个游标区都有一个
      
    
    </summary>
    
    
    
      <category term="SQL server" scheme="https://yesong17.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>游标例子</title>
    <link href="https://yesong17.github.io/2020/03/01/%E6%B8%B8%E6%A0%87%E4%BE%8B%E5%AD%90/"/>
    <id>https://yesong17.github.io/2020/03/01/游标例子/</id>
    <published>2020-02-29T16:41:09.000Z</published>
    <updated>2020-02-29T16:42:17.403Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SQLSERVER-游标的使用"><a href="#SQLSERVER-游标的使用" class="headerlink" title="SQLSERVER 游标的使用"></a>SQLSERVER 游标的使用</h3><p><strong>解决问题</strong><br>解决表关联后从表数据字段的串联操作</p><p><strong>测试数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Family</span><br><span class="line">(</span><br><span class="line">    FID <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    ParentName <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    Addr       <span class="built_in">varchar</span>(<span class="number">50</span>)</span><br><span class="line">)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Children</span><br><span class="line">(</span><br><span class="line">    CID <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>) primary <span class="keyword">key</span>, </span><br><span class="line">    FID <span class="built_in">int</span>,</span><br><span class="line">    ChildName <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    Age <span class="built_in">int</span>, </span><br><span class="line">)</span><br><span class="line">  </span><br><span class="line"><span class="comment">--测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Family (FID, ParentName,Addr) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">'张三'</span>, <span class="string">'中华大街'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Family (FID, ParentName,Addr) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">'李四'</span>, <span class="string">'云海南路'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Family (FID, ParentName,Addr) <span class="keyword">values</span> (<span class="number">3</span>, <span class="string">'王五'</span>, <span class="string">'和平小巷'</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">'张小'</span>, <span class="number">10</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">'李一'</span>, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">'李二'</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">3</span>, <span class="string">'王龙'</span>, <span class="number">13</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">3</span>, <span class="string">'王虎'</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Children (FID, ChildName,Age) <span class="keyword">values</span> (<span class="number">3</span>, <span class="string">'王凤'</span>, <span class="number">7</span>);</span><br></pre></td></tr></table></figure><p><strong>希望得到这样的查询结果</strong><br>FID ParentName Addr ChildName Age ChildName Age ChildName Age<br>1 张三 中华大街 张小 10<br>2 李四 云海南路 李一 8 李二 12<br>3 王五 和平小巷 王龙 13 王虎 10 王凤 7</p><p><strong>数据库脚本</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Children               </span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="comment">#TEMP</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="comment">#TEMP</span></span><br><span class="line">(</span><br><span class="line">FID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">ParentName <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">Addr <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">ChildNames <span class="built_in">VARCHAR</span>(<span class="number">8000</span>)</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">DECLARE</span> @FID <span class="built_in">INT</span>,@ParentName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),@Addr <span class="built_in">VARCHAR</span>(<span class="number">50</span>), @ChildName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),@Age <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">COUNT</span> <span class="built_in">BIT</span></span><br><span class="line"><span class="keyword">DECLARE</span> MY_CURSOR <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> family.FID,family.ParentName,family.Addr,Children.ChildName,Children.Age <span class="keyword">FROM</span> family <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Children <span class="keyword">ON</span> family.FID = Children.FID</span><br><span class="line"><span class="keyword">OPEN</span> MY_CURSOR </span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> MY_CURSOR <span class="keyword">INTO</span> @FID ,@ParentName ,@Addr , @ChildName ,@Age</span><br><span class="line"><span class="keyword">WHILE</span> @@FETCH_STATUS =<span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> @<span class="keyword">COUNT</span>= <span class="keyword">COUNT</span>(FID) <span class="keyword">FROM</span> <span class="comment">#TEMP WHERE FID = @FID</span></span><br><span class="line">    <span class="keyword">IF</span> @<span class="keyword">COUNT</span> &gt; <span class="number">0</span></span><br><span class="line">        <span class="keyword">BEGIN</span></span><br><span class="line">            <span class="keyword">UPDATE</span> <span class="comment">#TEMP SET ChildNames = ChildNames +' '+@ChildName +' '+CONVERT(VARCHAR,@Age) WHERE  FID = @FID</span></span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">    <span class="keyword">ELSE</span></span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span>  <span class="comment">#TEMP(FID,ParentName,Addr,ChildNames) VALUES (@FID,@ParentName,@Addr,@ChildName + ' '+CONVERT(VARCHAR,@Age))</span></span><br><span class="line">    <span class="keyword">FETCH</span>  <span class="keyword">NEXT</span>  <span class="keyword">FROM</span> MY_CURSOR <span class="keyword">INTO</span> @FID ,@ParentName ,@Addr , @ChildName ,@Age</span><br><span class="line">    PRINT      @FID PRINT @ParentName PRINT @Addr PRINT @ChildName PRINT @Age</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> MY_CURSOR</span><br><span class="line"><span class="keyword">DEALLOCATE</span> MY_CURSOR </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="comment">#TEMP</span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size="3">以上是使用游标的实例，详细介绍<a href="https://yq.aliyun.com/articles/714030" target="_blank"><font color="DeepPink">请戳我！！</font></a></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;SQLSERVER-游标的使用&quot;&gt;&lt;a href=&quot;#SQLSERVER-游标的使用&quot; class=&quot;headerlink&quot; title=&quot;SQLSERVER 游标的使用&quot;&gt;&lt;/a&gt;SQLSERVER 游标的使用&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;解决问题&lt;/stro
      
    
    </summary>
    
    
    
      <category term="SQL server" scheme="https://yesong17.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>遍历游标的三种方式</title>
    <link href="https://yesong17.github.io/2020/02/29/%E9%81%8D%E5%8E%86%E6%B8%B8%E6%A0%87%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://yesong17.github.io/2020/02/29/遍历游标的三种方式/</id>
    <published>2020-02-29T14:54:21.000Z</published>
    <updated>2020-03-01T07:27:09.206Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遍历游标的三种方式"><a href="#遍历游标的三种方式" class="headerlink" title="遍历游标的三种方式"></a>遍历游标的三种方式</h3><p><strong>废话不多说，上码！</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PROCEDURE</span> PRC_LJ <span class="keyword">IS</span> </span><br><span class="line">  <span class="keyword">CURSOR</span> C_EMP <span class="keyword">IS</span> <span class="comment">--声明显式游标  </span></span><br><span class="line">    <span class="keyword">SELECT</span> EMPNO,ENAME <span class="keyword">FROM</span> EMP;  </span><br><span class="line">  C_ROW C_EMP%ROWTYPE; <span class="comment">--定义游标变量，该变量的类型为基于游标C_EMP的记录  </span></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line">  <span class="comment">--For 循环  </span></span><br><span class="line">  <span class="keyword">FOR</span> C_ROW <span class="keyword">IN</span> C_EMP <span class="keyword">LOOP</span>  </span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(C_ROW.EMPNO || <span class="string">'--'</span> || C_ROW.ENAME);  </span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;  </span><br><span class="line"> </span><br><span class="line">  <span class="comment">--Fetch 循环  </span></span><br><span class="line">  OPEN C_EMP;<span class="comment">--必须要明确的打开和关闭游标  </span></span><br><span class="line">  LOOP  </span><br><span class="line">    FETCH C_EMP  </span><br><span class="line">      INTO C_ROW;  </span><br><span class="line">    EXIT WHEN C_EMP%NOTFOUND;  </span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(C_ROW.EMPNO || '++' || C_ROW.ENAME);  </span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;  </span><br><span class="line">  CLOSE C_EMP;  </span><br><span class="line"> </span><br><span class="line">  <span class="comment">--While 循环  </span></span><br><span class="line">  OPEN C_EMP;<span class="comment">--必须要明确的打开和关闭游标  </span></span><br><span class="line">    FETCH C_EMP INTO C_ROW;  </span><br><span class="line">    WHILE C_EMP%FOUND LOOP  </span><br><span class="line">      DBMS_OUTPUT.PUT_LINE(C_ROW.EMPNO || '**' || C_ROW.ENAME);  </span><br><span class="line">      FETCH C_EMP INTO C_ROW;  </span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">LOOP</span>;  </span><br><span class="line">  CLOSE C_EMP; </span><br><span class="line">  <span class="keyword">END</span> PRC_LJ;</span><br></pre></td></tr></table></figure><font color="lightsalmon">使用Fetch循环</font><br>注意，exit when语句一定要紧跟在fetch之后，避免多余的数据处理。<br>处理逻辑需要跟在exit when之后。<br>循环结束后要记得关闭游标。<br><br><font color="lightsalmon">使用While循环</font><br>使用while 循环时，需要在循环之前进行一次fetch动作，游标的属性才会起作用。<br>而且数据处理动作必须放在循环体内的fetch方法之前，循环体内的fetch方法要放在最后，否则就会多处理一次。<br><br><font color="lightsalmon">for循环是比较简单实用的方法。</font><br>首先，它会自动open和close游标。解决了你忘记打开或关闭游标的烦恼。其次,自动声明一个记录类型及定义该类型的变量，并自动fetch数据到这个变量。注意C_ROW 这个变量无需要在循环外进行声明，无需为其指定数据类型。它是一个记录类型，具体的结构是由游标决定的。这个变量的作用域仅仅是在循环体内。最后，与该游标关联的所有记录都已经被取回后，循环无条件结束，不必判定游标的%NOTFOUND属性为TRUE。<br><font color="lightsalmon">for循环是用来循环游标的最好方法。高效，简洁，安全。</font><hr><h3 id="存储过程中游标的三种遍历方式"><a href="#存储过程中游标的三种遍历方式" class="headerlink" title="存储过程中游标的三种遍历方式"></a>存储过程中游标的三种遍历方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> myprocedure <span class="keyword">is</span></span><br><span class="line">    <span class="keyword">CURSOR</span> CUR_TEST <span class="keyword">IS</span> <span class="comment">--声明显式游标</span></span><br><span class="line">             <span class="keyword">SELECT</span> ECODE,ENAME</span><br><span class="line">              <span class="keyword">FROM</span> EMP;</span><br><span class="line">      <span class="comment">--定义游标变量，该变量的类型为基于游标C_EMP的记录</span></span><br><span class="line">    CUR CUR_TEST%ROWTYPE; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">BEGIN</span> </span><br><span class="line">      <span class="comment">--For 循环</span></span><br><span class="line">      <span class="keyword">FOR</span> CUR <span class="keyword">IN</span> CUR_TEST <span class="keyword">LOOP</span></span><br><span class="line">          <span class="comment">--循环体</span></span><br><span class="line">        DBMS_OUTPUT.PUT_LINE(<span class="string">'员工编号：'</span>||CUR.ECODE ||<span class="string">'员工姓名：'</span>|| CUR.ENAME);</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">--Fetch 循环</span></span><br><span class="line">      OPEN CUR_TEST;<span class="comment">--必须要明确的打开和关闭游标</span></span><br><span class="line">      LOOP </span><br><span class="line">        FETCH CUR_TEST INTO CUR;</span><br><span class="line">        EXIT WHEN CUR_TEST%NOTFOUND;</span><br><span class="line">        <span class="comment">--循环体</span></span><br><span class="line">        DBMS_OUTPUT.PUT_LINE('员工编号：'||CUR.ECODE ||'员工姓名：'|| CUR.ENAME);</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">      CLOSE C_EMP;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">--While 循环</span></span><br><span class="line">      OPEN CUR_TEST;<span class="comment">--必须要明确的打开和关闭游标</span></span><br><span class="line">        FETCH CUR_TEST INTO CUR;</span><br><span class="line">        WHILE CUR_TEST%FOUND LOOP  </span><br><span class="line">          <span class="comment">--循环体</span></span><br><span class="line">          DBMS_OUTPUT.PUT_LINE('员工编号：'||CUR.ECODE ||'员工姓名：'|| CUR.ENAME);</span><br><span class="line">          </span><br><span class="line">          FETCH CUR_TEST INTO CUR;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">    CLOSE C_EMP;</span><br><span class="line"><span class="keyword">END</span> myprocedure;</span><br></pre></td></tr></table></figure><p><strong>既然遍历这么好用，那么举几个例子吧</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> My_Cursor <span class="keyword">CURSOR</span> <span class="comment">--定义游标</span></span><br><span class="line"><span class="keyword">FOR</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dbo.MemberAccount) <span class="comment">--查出需要的集合放到游标中</span></span><br><span class="line"><span class="keyword">OPEN</span> My_Cursor; <span class="comment">--打开游标</span></span><br><span class="line">FETCH NEXT FROM My_Cursor ; <span class="comment">--读取第一行数据</span></span><br><span class="line">WHILE @@FETCH_STATUS = 0</span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">  <span class="comment">--UPDATE dbo.MemberAccount SET UserName = UserName + 'A' WHERE CURRENT OF My_Cursor; --更新</span></span><br><span class="line"> <span class="comment">--DELETE FROM dbo.MemberAccount WHERE CURRENT OF My_Cursor; --删除</span></span><br><span class="line"> <span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> My_Cursor; <span class="comment">--读取下一行数据</span></span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> My_Cursor; <span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">DEALLOCATE</span> My_Cursor; <span class="comment">--释放游标</span></span><br><span class="line">GO</span><br></pre></td></tr></table></figure><ul><li>利用游标循环更新、删除MemberAccount表中的数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> My_Cursor <span class="keyword">CURSOR</span> <span class="comment">--定义游标</span></span><br><span class="line"><span class="keyword">FOR</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dbo.MemberAccount) <span class="comment">--查出需要的集合放到游标中</span></span><br><span class="line"><span class="keyword">OPEN</span> My_Cursor; <span class="comment">--打开游标</span></span><br><span class="line">FETCH NEXT FROM My_Cursor ; <span class="comment">--读取第一行数据</span></span><br><span class="line">WHILE @@FETCH_STATUS = 0</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">--UPDATE dbo.MemberAccount SET UserName = UserName + 'A' WHERE CURRENT OF My_Cursor; --更新</span></span><br><span class="line">        <span class="comment">--DELETE FROM dbo.MemberAccount WHERE CURRENT OF My_Cursor; --删除</span></span><br><span class="line">        <span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> My_Cursor; <span class="comment">--读取下一行数据</span></span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> My_Cursor; <span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">DEALLOCATE</span> My_Cursor; <span class="comment">--释放游标</span></span><br><span class="line">GO</span><br></pre></td></tr></table></figure><ul><li>利用游标循环更新MemberService表中的数据（更新每个用户所购买服务的时间）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @UserId <span class="built_in">varchar</span>(<span class="number">50</span>) </span><br><span class="line"><span class="keyword">DECLARE</span> My_Cursor <span class="keyword">CURSOR</span> <span class="comment">--定义游标</span></span><br><span class="line"><span class="keyword">FOR</span> (<span class="keyword">SELECT</span> UserId <span class="keyword">FROM</span> dbo.MemberAccount) <span class="comment">--查出需要的集合放到游标中</span></span><br><span class="line"><span class="keyword">OPEN</span> My_Cursor; <span class="comment">--打开游标</span></span><br><span class="line">FETCH NEXT FROM My_Cursor INTO @UserId; <span class="comment">--读取第一行数据(将MemberAccount表中的UserId放到@UserId变量中)</span></span><br><span class="line">WHILE @@FETCH_STATUS = 0</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        PRINT @UserId; <span class="comment">--打印数据(打印MemberAccount表中的UserId)</span></span><br><span class="line">        <span class="keyword">UPDATE</span> dbo.MemberService <span class="keyword">SET</span> ServiceTime = <span class="keyword">DATEADD</span>(<span class="keyword">Month</span>, <span class="number">6</span>, <span class="keyword">getdate</span>()) <span class="keyword">WHERE</span> UserId = @UserId; <span class="comment">--更新数据</span></span><br><span class="line">        FETCH NEXT FROM My_Cursor INTO @UserId; <span class="comment">--读取下一行数据(将MemberAccount表中的UserId放到@UserId变量中)</span></span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> My_Cursor; <span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">DEALLOCATE</span> My_Cursor; <span class="comment">--释放游标</span></span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p>done！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遍历游标的三种方式&quot;&gt;&lt;a href=&quot;#遍历游标的三种方式&quot; class=&quot;headerlink&quot; title=&quot;遍历游标的三种方式&quot;&gt;&lt;/a&gt;遍历游标的三种方式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;废话不多说，上码！&lt;/strong&gt;&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
    
    
      <category term="SQL server" scheme="https://yesong17.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>初识游标</title>
    <link href="https://yesong17.github.io/2020/02/29/%E5%88%9D%E8%AF%86%E6%B8%B8%E6%A0%87/"/>
    <id>https://yesong17.github.io/2020/02/29/初识游标/</id>
    <published>2020-02-29T13:12:42.000Z</published>
    <updated>2020-02-29T16:20:52.306Z</updated>
    
    <content type="html"><![CDATA[<h3 id="游标"><a href="#游标" class="headerlink" title="游标"></a><strong>游标</strong></h3><font size="4" color="orangered"><u>游标</u></font>（cursor）是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果。<br>每个游标区都有一个名字,用户可以用SQL语句逐一从游标中获取记录，并赋给主变量，交由主语言进一步处理。<br><br><strong>游标</strong>是<font color="orangered">处理结果集的一种机制</font>吧，它可以定位到结果集中的某一行，多数据进行读写，也可以移动游标定位到你所需要的行中进行操作数据。一般复杂的存储过程，都会有游标的出现，他的用处主要有：<br>    1、定位到结果集中的某一行。<br>    2、对当前位置的数据进行读写。<br>    3、可以对结果集中的数据单独操作，而不是整行执行相同的操作。<br>    4、是面向集合的数据库管理系统和面向行的程序设计之间的桥梁。<br><br>- <font color="orangered">%ISOPEN</font>  检测游标是否打开。<br>-  <font color="orangered">%FOUND </font> 检测游标结果集是否存在数据。<br>-  <font color="orangered">%NOTFOUND</font>  是否不存在数据。<br>-  <font color="orangered">%ROWCOUNT</font> 游标已提取的实际行数。<br><br><strong>注：</strong><br>    <font color="orangered">在能够使用游标前，必须声明/定义它，过程中没有检索数据，只是定义要使用的select语句一旦声明就必须打开游标 开始检索数据对于填有数据的游标，根据需要检索各行 取出数据必须关闭游标 再删除游标使用声明过的游标不需要再次声明，open打开就行了（只要没deallocate就行）</font><p><strong>建立临时数据表</strong></p><p>create table #tmp (Id NVARCHAR(MAX),UserName NVARCHAR(MAX),Password NVARCHAR(MAX),NickName NVARCHAR(MAX))  </p><p>SELECT * FROM #tmp; –查询临时表<br>DROP TABLE #tmp –删除临时表 </p><h4 id="游标的生命周期"><a href="#游标的生命周期" class="headerlink" title="游标的生命周期"></a><strong>游标的生命周期</strong></h4><p>​    游标的生命周期包含有五个阶段：<font color="orangered">声明游标、打开游标、读取游标数据、关闭游标、释放游标。</font></p><h5 id="1、游标格式"><a href="#1、游标格式" class="headerlink" title="1、游标格式"></a>1、游标格式</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--声明游标</span></span><br><span class="line"><span class="keyword">DECLARE</span> cursor_name <span class="keyword">CURSOR</span> [ <span class="keyword">LOCAL</span> | <span class="keyword">GLOBAL</span> ] </span><br><span class="line">     [ FORWARD_ONLY | <span class="keyword">SCROLL</span> ] </span><br><span class="line">     [ <span class="keyword">STATIC</span> | KEYSET | DYNAMIC | FAST_FORWARD ] </span><br><span class="line">     [ READ_ONLY | SCROLL_LOCKS | OPTIMISTIC ] </span><br><span class="line">     [ TYPE_WARNING ] </span><br><span class="line">     <span class="keyword">FOR</span> select_statement </span><br><span class="line">     [ <span class="keyword">FOR</span> <span class="keyword">UPDATE</span> [ <span class="keyword">OF</span> column_name [ ,...n ] ] ]</span><br><span class="line"><span class="comment">--打开游标语法</span></span><br><span class="line"><span class="keyword">open</span> [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"><span class="comment">--提取游标语法</span></span><br><span class="line"><span class="keyword">Fetch</span></span><br><span class="line">[ [<span class="keyword">Next</span>|<span class="keyword">prior</span>|Frist|<span class="keyword">Last</span>|Absoute n|<span class="keyword">Relative</span> n ]</span><br><span class="line"><span class="keyword">from</span> ]</span><br><span class="line">[<span class="keyword">Global</span>] cursor_name</span><br><span class="line">[<span class="keyword">into</span> @variable_name[,....]]</span><br><span class="line"><span class="comment">--关闭游标语法</span></span><br><span class="line"><span class="keyword">close</span> [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"><span class="comment">--释放游标语法</span></span><br><span class="line"><span class="keyword">deallocate</span>  [ <span class="keyword">Global</span> ] cursor_name | cursor_variable_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--游标修改当前数据语法</span></span><br><span class="line"><span class="keyword">Update</span> 基表名 <span class="keyword">Set</span> 列名=值[,...] <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span> 游标名</span><br><span class="line"><span class="comment">--游标删除当前数据语法</span></span><br><span class="line"><span class="keyword">Delete</span> 基表名  <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span> 游标名</span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><table><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>cursor_name</td><td><font size="2">游标名称</font>&gt;</td></tr><tr><td>Local</td><td><font size="2">作用域为局部，只在定义它的批处理，存储过程或触发器中有效。</font>&gt;</td></tr><tr><td>Global</td><td><font size="2">作用域为全局，由连接执行的任何存储过程或批处理中，都可以引用该游标。</font>&gt;</td></tr><tr><td>[Local \</td><td>Global]</td><td><font size="2">默认为local。</font></td></tr><tr><td>Forward_Only</td><td><font size="2">指定游标智能从第一行滚到最后一行。Fetch Next是唯一支持的提取选项。如果在指定Forward_Only是不指定Static、KeySet、Dynamic关键字，默认为Dynamic游标。如果Forward_Only和Scroll没有指定，Static、KeySet、Dynamic游标默认为Scroll，Fast_Forward默认为Forward_Only</font></td></tr><tr><td>Static</td><td><font size="2">静态游标</font></td></tr><tr><td>KeySet</td><td><font size="2">键集游标</font></td></tr><tr><td>Dynamic</td><td><font size="2">动态游标，不支持Absolute提取选项</font></td></tr><tr><td>Fast_Forward</td><td><font size="2">指定启用了性能优化的Forward_Only、Read_Only游标。如果指定啦Scroll或For_Update，就不能指定他啦。</font></td></tr><tr><td>Read_Only</td><td><font size="2">不能通过游标对数据进行删改。</font></td></tr><tr><td>Scroll_Locks</td><td><font size="2">将行读入游标是，锁定这些行，确保删除或更新一定会成功。如果指定啦Fast_Forward或Static，就不能指定他啦。</font></td></tr><tr><td>Optimistic</td><td><font size="2">指定如果行自读入游标以来已得到更新，则通过游标进行的定位更新或定位删除不成功。当将行读入游标时，sqlserver不锁定行，它改用timestamp列值的比较结果来确定行读入游标后是否发生了修改，如果表不行timestamp列，它改用校验和值进行确定。如果已修改改行，则尝试进行的定位更新或删除将失败。如果指定啦Fast_Forward,则不能指定他。</font></td></tr><tr><td>Type_Warning</td><td><font size="2">指定将游标从所请求的类型隐式转换为另一种类型时向客户端发送警告信息。</font></td></tr><tr><td>For Update[of column_name ,….]</td><td><font size="2">定义游标中可更新的列。</font></td></tr><tr><td>Frist</td><td><font size="2">结果集的第一行</font></td></tr><tr><td>Prior</td><td><font size="2">当前位置的上一行</font></td></tr><tr><td>Next</td><td><font size="2">当前位置的下一行</font></td></tr><tr><td>Last</td><td><font size="2">最后一行</font></td></tr><tr><td>Absoute n</td><td><font size="2">从游标的第一行开始数，第n行。</font></td></tr><tr><td>Relative n</td><td><font size="2">从当前位置数，第n行。</font></td></tr><tr><td>Into @variable_name[,…]</td><td><font size="2">将提取到的数据存放到变量variable_name中。</font></td></tr></tbody></table><ul><li><p>fetch状态</p><p>0：Fetch语句成功。<br>-1：Fetch语句失败或行不在结果集中。<br>-2：提取的行不存在。</p><font color="orangered">这个状态值可以帮你判断提取数据的成功与否。</font></li><li><p>提取数据</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--提取数据</span></span><br><span class="line">fetch first from orderNum_02_cursor</span><br><span class="line">fetch relative 3 from orderNum_02_cursor</span><br><span class="line">fetch next from orderNum_02_cursor</span><br><span class="line">fetch absolute 4 from orderNum_02_cursor</span><br><span class="line">fetch next from orderNum_02_cursor</span><br><span class="line">fetch last from orderNum_02_cursor </span><br><span class="line">fetch prior from orderNum_02_cursor</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--提取数据赋值给变量</span></span><br><span class="line"><span class="keyword">declare</span> @OrderId <span class="built_in">int</span></span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">absolute</span> <span class="number">3</span> <span class="keyword">from</span> orderNum_02_cursor <span class="keyword">into</span> @OrderId</span><br><span class="line"><span class="keyword">select</span> @OrderId <span class="keyword">as</span> <span class="keyword">id</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span></span><br></pre></td></tr></table></figure><h5 id="2、示例1"><a href="#2、示例1" class="headerlink" title="2、示例1"></a>2、示例1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 循环检索数据 </span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_num <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> orders_cursor <span class="keyword">CURSOR</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> order_num;</span><br><span class="line">OPEN orders_cursor;</span><br><span class="line">FETCH NEXT FROM orders_cursor INTO @order_num;</span><br><span class="line">WHILE @@FETCH_STATUS=0</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> orders_cursor <span class="keyword">INTO</span> @order_num;</span><br><span class="line"><span class="keyword">END</span>；</span><br><span class="line"><span class="keyword">CLOSE</span> orders_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> orders_cursor;</span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------------------</span></span><br><span class="line"><span class="comment">-- 进一步对数据实际处理</span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_num <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @order_total MONEY;  <span class="comment">--每个订单合计</span></span><br><span class="line"><span class="keyword">DECLARE</span> @total MONEY;    <span class="comment">--总合计</span></span><br><span class="line"><span class="keyword">SET</span> @total=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> orders_cursor <span class="keyword">CURSOR</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">SELECT</span> order_num <span class="keyword">FROM</span> orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> order_num;</span><br><span class="line">OPEN orders_cursor;</span><br><span class="line"><span class="comment">-- fetch取每一个@order_num</span></span><br><span class="line">FETCH NEXT FROM orders_cursor INTO @order_num;</span><br><span class="line">WHILE @@FETCH_STATUS=0</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- 执行存储过程计算每个订单合计存入@order_total</span></span><br><span class="line">EXEC ordertotal @order_num,<span class="number">1</span>,@order_total <span class="keyword">OUTPUT</span> </span><br><span class="line"><span class="comment">-- 每检索一个@order_total就set到@total上</span></span><br><span class="line"><span class="keyword">SET</span> @total=@total+@order_total</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> orders_cursor <span class="keyword">INTO</span> @order_num;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> orders_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> orders_cursor;</span><br><span class="line"><span class="comment">-- 返回结果</span></span><br><span class="line"><span class="keyword">SELECT</span> @total <span class="keyword">AS</span> GrantTotal;</span><br></pre></td></tr></table></figure><p><font color="orangered">注</font>：<a href="https://yesong17.github.io/2020/02/28/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/#more" target="_blank">存储过程：例子1</a></p><h5 id="3、示例2"><a href="#3、示例2" class="headerlink" title="3、示例2"></a>3、示例2</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1.声明游标</span></span><br><span class="line"><span class="keyword">declare</span> orderNum_03_cursor <span class="keyword">cursor</span> <span class="keyword">scroll</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">select</span> OrderId ,userId <span class="keyword">from</span> bigorder <span class="keyword">where</span> orderNum=<span class="string">'ZEORD003402'</span>)</span><br><span class="line"><span class="comment">--2.打开游标</span></span><br><span class="line"><span class="keyword">open</span> orderNum_03_cursor</span><br><span class="line"><span class="comment">--3.声明游标提取数据所要存放的变量</span></span><br><span class="line"><span class="keyword">declare</span> @OrderId <span class="built_in">int</span> ,@userId <span class="built_in">varchar</span>(<span class="number">15</span>)</span><br><span class="line"><span class="comment">--4.定位游标到哪一行</span></span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">First</span> <span class="keyword">from</span> orderNum_03_cursor <span class="keyword">into</span> @OrderId,@userId  <span class="comment">--into的变量数量必须与游标查询结果集的列数相同</span></span><br><span class="line"><span class="keyword">while</span> @@fetch_status=<span class="number">0</span>  <span class="comment">--提取成功，进行下一条数据的提取操作 </span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">if</span> @OrderId=<span class="number">122182</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">Update</span> bigorder <span class="keyword">Set</span> UserId=<span class="string">'123'</span> <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span>  orderNum_03_cursor  <span class="comment">--修改当前行</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">if</span> @OrderId=<span class="number">154074</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">      <span class="comment">--删除当前行</span></span><br><span class="line">      <span class="keyword">Delete</span> bigorder <span class="keyword">Where</span> <span class="keyword">Current</span> <span class="keyword">of</span>  orderNum_03_cursor  </span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">   <span class="comment">--移动游标</span></span><br><span class="line">   <span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> orderNum_03_cursor <span class="keyword">into</span> @OrderId ,@userId </span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">close</span> orderNum_03_cursor</span><br><span class="line"><span class="comment">--释放游标</span></span><br><span class="line"><span class="keyword">deallocate</span> orderNum_03_cursor</span><br></pre></td></tr></table></figure><p><strong>更多详情请参考</strong><a href="https://www.cnblogs.com/xiongzaiqiren/p/sql-cursor.html" target="_blank"><font color="orangered"><u>这里 !!</u></font></a></p><p><a href="https://www.cnblogs.com/lsgsanxiao/p/10878539.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsgsanxiao/p/10878539.html</a><br><a href="https://blog.csdn.net/wanlong360599336/article/details/52415420" target="_blank" rel="noopener">https://blog.csdn.net/wanlong360599336/article/details/52415420</a><br><a href="https://blog.csdn.net/qq_40741855/article/details/89154073" target="_blank" rel="noopener">https://blog.csdn.net/qq_40741855/article/details/89154073</a><br><a href="https://blog.csdn.net/wanlong360599336/article/details/52438695" target="_blank" rel="noopener">https://blog.csdn.net/wanlong360599336/article/details/52438695</a><br><a href="https://blog.csdn.net/ghjghjghj1231/article/details/83724537" target="_blank" rel="noopener">https://blog.csdn.net/ghjghjghj1231/article/details/83724537</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;游标&quot;&gt;&lt;a href=&quot;#游标&quot; class=&quot;headerlink&quot; title=&quot;游标&quot;&gt;&lt;/a&gt;&lt;strong&gt;游标&lt;/strong&gt;&lt;/h3&gt;&lt;font size=&quot;4&quot; color=&quot;orangered&quot;&gt;&lt;u&gt;游标&lt;/u&gt;&lt;/font&gt;（cursor
      
    
    </summary>
    
    
    
      <category term="SQL server" scheme="https://yesong17.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>存储过程</title>
    <link href="https://yesong17.github.io/2020/02/28/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>https://yesong17.github.io/2020/02/28/存储过程/</id>
    <published>2020-02-28T13:42:46.000Z</published>
    <updated>2020-02-29T13:32:59.211Z</updated>
    
    <content type="html"><![CDATA[<h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><font color="orangered">创建：CREATE PROCEDURE 存储名 AS <br>执行：EXEC 存储名 @order_total OUTPUT <br>删除：DROP PROCEDURE 存储名</font><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><table><thead><tr><th>全局变量名称</th><th>描述</th></tr></thead><tbody><tr><td><font color="gray" size="3">@@CURSOR_ROWS</font></td><td><font color="gray" size="2">返回连接上打开的上一个游标中的当前限定行的数目，确定当其被调用时检索了游标符合条件的行数。</font></td></tr><tr><td><font color="gray" size="3">@@FETCH_STATUS</font></td><td><font color="gray" size="2">返回针对连接当前打开的任何游标发出的上一条游标 FETCH语句的状态。</font></td></tr><tr><td><font color="gray" size="3">@@ROWCOUNT</font></td><td><font color="gray" size="2">返回受上一语句影响的行数。</font></td></tr><tr><td><font color="gray" size="3">@@SERVERNAME</font></td><td><font color="gray" size="2">返回运行 SQL Server 的本地服务器的名称。</font></td></tr><tr><td><font color="gray" size="3">@@OPTIONS</font></td><td><font color="gray" size="2">返回有关当前 SET 选项的信息。</font></td></tr><tr><td><font color="gray" size="3">@@LOCK_TIMEOUT</font></td><td><font color="gray" size="2">返回当前会话的当前锁定超时设置（毫秒）。</font></td></tr><tr><td><font color="gray" size="3">@@IDENTITY</font></td><td><font color="gray" size="2">返回上次插入的标识值。</font></td></tr><tr><td><font color="gray" size="3">@@ERROR</font></td><td><font color="gray" size="2">返回执行的上一个 Transact-SQL 语句的错误号，如果前一个 Transact-SQL 语句执行没有错误，则返回 0。</font></td></tr><tr><td><font color="gray" size="3">@@CONNECTIONS</font></td><td><font color="gray" size="2">返回 SQL Server 自上次启动以来尝试的连接数。</font></td></tr></tbody></table><h4 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h4><p>​        先创建一张示例表order[order_num,order_name,order_count,order_date,<br>order_price,order_total]接受一个订单号@order_num和一个判断是否加营业额<br>税的按钮[0/1]@taxable，返回订单总额@order_total</p><h5 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> ordertotal</span><br><span class="line"><span class="comment">-- 传入局部变量@  @@全局变量</span></span><br><span class="line">@order_num <span class="built_in">INT</span>,   <span class="comment">--订单号</span></span><br><span class="line">@taxable <span class="built_in">BIT</span>,   <span class="comment">--按钮0/1</span></span><br><span class="line"><span class="comment">--这个是合计结果输出的变量  用output</span></span><br><span class="line">@order_total MONEY <span class="keyword">OUTPUT</span>    </span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- 声明变量  用来存放计算的结果</span></span><br><span class="line"><span class="keyword">DECLARE</span> @total MONEY;    <span class="comment">--合计结果</span></span><br><span class="line"><span class="keyword">DECLARE</span> @taxrate <span class="built_in">INT</span>;    <span class="comment">--营业税%</span></span><br><span class="line"><span class="keyword">SET</span> @taxrate=<span class="number">6</span>；         <span class="comment">--指定营业税6%</span></span><br><span class="line"><span class="comment">-- 数据集</span></span><br><span class="line"><span class="keyword">SELECT</span> @total=<span class="keyword">SUM</span>(item_price*quantity)</span><br><span class="line"><span class="keyword">FROM</span> orderitems</span><br><span class="line"><span class="keyword">WHERE</span> order_num=@order_num</span><br><span class="line"><span class="comment">--判断是否需要营业税</span></span><br><span class="line"><span class="keyword">IF</span> @taxable=<span class="number">1</span></span><br><span class="line"><span class="comment">-- 计算合计＋税</span></span><br><span class="line"><span class="keyword">SET</span> @total=@total+(@total/<span class="number">100</span>*@taxrate);</span><br><span class="line"><span class="comment">-- 查询结果</span></span><br><span class="line"><span class="keyword">SELECT</span> @order_total=@total;</span><br><span class="line"><span class="keyword">END</span>；</span><br></pre></td></tr></table></figure><h5 id="测试–调用存储过程"><a href="#测试–调用存储过程" class="headerlink" title="测试–调用存储过程"></a>测试–调用存储过程</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_total MONEY</span><br><span class="line"><span class="comment">-- 传入订单号和按钮1  需要营业税</span></span><br><span class="line">EXEC ordertotal <span class="number">20005</span>,<span class="number">1</span>,@order_total <span class="keyword">OUTPUT</span></span><br><span class="line"><span class="keyword">SELECT</span> @order_total</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> @order_total MONEY</span><br><span class="line"><span class="comment">-- 传入订单号和按钮1  不需要营业税</span></span><br><span class="line">EXEC ordertotal <span class="number">20005</span>,<span class="number">0</span>,@order_total <span class="keyword">OUTPUT</span></span><br><span class="line"><span class="keyword">SELECT</span> @order_total</span><br></pre></td></tr></table></figure><h4 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h4><p>创建一个带两个参数的存储过程</p><h5 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc usp_numble</span><br><span class="line">@num1 <span class="built_in">int</span>,</span><br><span class="line">@num2 <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @num1*@num2</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--调用</span></span><br><span class="line">exec usp_numble <span class="number">100</span>,<span class="number">200</span></span><br></pre></td></tr></table></figure><h5 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建student表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'007'</span>,<span class="string">'泫雅'</span>,<span class="string">'32'</span>,<span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'008'</span>,<span class="string">'千珏'</span>,<span class="string">'17'</span>,<span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'009'</span>,<span class="string">'李钰琪'</span>,<span class="string">'26'</span>,<span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'010'</span>,<span class="string">'剑姬'</span>,<span class="string">'35'</span>,<span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'011'</span>,<span class="string">'貂蝉'</span>,<span class="string">'25'</span>,<span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'012'</span>,<span class="string">'阚清子'</span>,<span class="string">'31'</span>,<span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'013'</span>,<span class="string">'胡歌'</span>,<span class="string">'38'</span>,<span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'014'</span>,<span class="string">'万喜'</span>,<span class="string">'30'</span>,<span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(stu_id,stu_name,stu_age,stu_sex) <span class="keyword">values</span>(<span class="string">'015'</span>,<span class="string">'李沁'</span>,<span class="string">'28'</span>,<span class="string">'女'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建usp_query存储过程</span></span><br><span class="line"><span class="keyword">create</span> proc usp_query</span><br><span class="line">@stu_age <span class="keyword">nvarchar</span>(<span class="number">10</span>),</span><br><span class="line">@stu_sex <span class="keyword">nvarchar</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="comment">-- update student set stu_age='25' where stu_age&gt;@stu_age and stu_sex=@stu_sex</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> stu_age&gt;@stu_age <span class="keyword">and</span> stu_sex=@stu_sex</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--测试</span></span><br><span class="line">exec usp_query <span class="string">'20'</span>,<span class="string">'女'</span></span><br><span class="line"><span class="comment">-----------------------------------</span></span><br><span class="line"><span class="comment">--带输出参数</span></span><br><span class="line"><span class="keyword">create</span> proc usp_show_student</span><br><span class="line">@stu_age <span class="keyword">nvarchar</span>(<span class="number">255</span>),</span><br><span class="line">@recorddata <span class="built_in">int</span> <span class="keyword">output</span>  <span class="comment">--输出参数</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> stu_age&gt;@stu_age</span><br><span class="line"><span class="comment">-- 将查询结果传递给@recorddata</span></span><br><span class="line"><span class="keyword">set</span> @recorddata=(<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student <span class="keyword">where</span> stu_age&gt;@stu_age)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line"><span class="keyword">declare</span> @re <span class="built_in">int</span></span><br><span class="line">exec usp_show_student @stu_age=<span class="string">'24'</span>,@recorddata=@re <span class="keyword">output</span></span><br><span class="line">print @re</span><br><span class="line"><span class="comment">----------------------------------</span></span><br><span class="line"><span class="comment">--写一个分页查询</span></span><br><span class="line"><span class="keyword">create</span> proc get_student_page</span><br><span class="line">@pagesize <span class="built_in">int</span>=<span class="number">5</span>,  <span class="comment">--每页记录条数</span></span><br><span class="line">@pageindex <span class="built_in">int</span>=<span class="number">1</span>,  <span class="comment">--当前要查看第几页的记录</span></span><br><span class="line">@recordcount <span class="built_in">int</span> <span class="keyword">output</span>,   <span class="comment">--总的记录条数</span></span><br><span class="line">@pagecount <span class="built_in">int</span> <span class="keyword">output</span>    <span class="comment">--总的页数</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">s.stu_id,s.stu_name,s.stu_age,s.stu_sex</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> *,rn=ROW_NUMBER() <span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> stu_id <span class="keyword">asc</span>) <span class="keyword">from</span> student) <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">where</span> s.rn <span class="keyword">between</span> (@pageindex<span class="number">-1</span>)*@pagesize+<span class="number">1</span> <span class="keyword">and</span> @pagesize*@pageindex</span><br><span class="line"><span class="comment">-- 计算总的条数</span></span><br><span class="line"><span class="keyword">set</span> @recordcount=(<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student)</span><br><span class="line"><span class="comment">-- 计算总页数 ceiling()向上取整</span></span><br><span class="line"><span class="keyword">set</span> @pagecount=<span class="keyword">ceiling</span>(@recordcount*<span class="number">1.0</span>/@pagesize)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--调用分页查询</span></span><br><span class="line"><span class="keyword">declare</span> @rc <span class="built_in">int</span>,@pc <span class="built_in">int</span></span><br><span class="line">exec get_student_page @pagesize=<span class="number">3</span>,@pageindex=<span class="number">5</span>,@recordcount=@rc <span class="keyword">output</span>,@pagecount=@pc <span class="keyword">output</span></span><br><span class="line">print @rc</span><br><span class="line">print @pc</span><br></pre></td></tr></table></figure><h5 id="例子3"><a href="#例子3" class="headerlink" title="例子3"></a>例子3</h5><p>​        程序员工资表：ProWage[字段id(int)、PName(char 10)、Wage(int)]创建一个存储过程给员工加薪。例如：如果有百分之五十的人薪水不到6000，给所有人加薪，每次加200元，直到有一半以上的人工资大于6000元。</p><ul><li>建表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--检验数据库是否存在，如果为真，删除此数据库--</span></span><br><span class="line">IF exists(<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sysdatabases <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">'Wage'</span>)</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">DATABASE</span> Wage</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> Wage</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--建数据表--</span></span><br><span class="line"><span class="keyword">USE</span> Wage</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ProWage  <span class="comment">--程序员工资表</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>) primary <span class="keyword">key</span>,  <span class="comment">--工资编号</span></span><br><span class="line">  PName  <span class="built_in">CHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,     <span class="comment">--程序员姓名</span></span><br><span class="line">  Wage  <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>    <span class="comment">--工资</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">--插入数据--</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'伏羲'</span>,<span class="number">4900</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'清月'</span>,<span class="number">5200</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'婉儿'</span>,<span class="number">4800</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'初一'</span>,<span class="number">6500</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'蓝天'</span>,<span class="number">5700</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'清风'</span>,<span class="number">4800</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'月神'</span>,<span class="number">5500</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ProWage(PName,Wage)<span class="keyword">VALUES</span>(<span class="string">'楚天'</span>,<span class="number">5200</span>)</span><br></pre></td></tr></table></figure><ul><li>创建存储过程</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--1、创建存储过程--</span></span><br><span class="line">if exists (<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'Sum_wage'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> Sum_wage</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> Sum_wage </span><br><span class="line">@PWage <span class="built_in">int</span>,</span><br><span class="line">@AWage <span class="built_in">int</span>,</span><br><span class="line">@total <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> ProWage)&gt;<span class="number">2</span>*(<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> ProWage <span class="keyword">where</span> Wage&gt;=@PWage)</span><br><span class="line"><span class="keyword">update</span> ProWage <span class="keyword">set</span> @total=@total+@AWage,Wage=Wage+@AWage</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">break</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print<span class="string">'一共加薪：'</span>+<span class="keyword">convert</span>(<span class="built_in">varchar</span>,@total)+<span class="string">'元'</span></span><br><span class="line">print<span class="string">'加薪后的程序员工资列表：'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> ProWage</span><br><span class="line"><span class="comment">--调用存储过程1--</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">2000</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">2200</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">3000</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">4000</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">5000</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line">exec Sum_wage @PWage=<span class="number">6000</span>,@AWage=<span class="number">100</span>,@total=<span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--2、创建存储过程2--</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'Avg_wage'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> Avg_wage</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> Avg_wage </span><br><span class="line">@PWage <span class="built_in">int</span>,</span><br><span class="line">@AWage <span class="built_in">int</span>,</span><br><span class="line">@total <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">select</span> <span class="keyword">Avg</span>(Wage) <span class="keyword">from</span> ProWage)&lt;=@PWage)</span><br><span class="line"><span class="keyword">update</span> ProWage <span class="keyword">set</span> @total=@total+@AWage,Wage=Wage+@AWage</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">break</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print<span class="string">'一共加薪：'</span>+<span class="keyword">convert</span>(<span class="built_in">varchar</span>,@total)+<span class="string">'元'</span></span><br><span class="line">print<span class="string">'加薪后的程序员工资列表：'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> ProWage</span><br><span class="line"><span class="comment">--调用存储过程--</span></span><br><span class="line">exec Avg_wage @PWage=<span class="number">6000</span>,@AWage=<span class="number">200</span>,@total=<span class="number">0</span></span><br><span class="line">exec Avg_wage @PWage=<span class="number">5500</span>,@AWage=<span class="number">200</span>,@total=<span class="number">0</span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size="3">以上是存储过程的实例，详细介绍<a href="https://blog.csdn.net/crazygolf/article/details/38989461#" target="_blank"><font color="DeepPink">请戳我！！</font></a></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;存储过程&quot;&gt;&lt;a href=&quot;#存储过程&quot; class=&quot;headerlink&quot; title=&quot;存储过程&quot;&gt;&lt;/a&gt;存储过程&lt;/h3&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h
      
    
    </summary>
    
    
    
      <category term="SQL server" scheme="https://yesong17.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://yesong17.github.io/2020/02/28/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://yesong17.github.io/2020/02/28/常用正则表达式/</id>
    <published>2020-02-28T02:22:32.000Z</published>
    <updated>2020-02-28T02:22:26.345Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h3><p>开源中国提供了强大的<font color="red"><a href="http://tool.oschina.net/regex/" target="_blank" rel="noopener"><u>正则测试工具</u></a></font>,让我们一起来学吧！</p><font color="red" size="10">废话不多说，直接来点硬核！！</font><table><thead><tr><th style="text-align:center">匹配内容</th><th style="text-align:left">正则表达式</th></tr></thead><tbody><tr><td style="text-align:center">汉字</td><td style="text-align:left"><code>^[\u4e00-\u9fa5]{0,}$</code></td></tr><tr><td style="text-align:center">空白行</td><td style="text-align:left"><code>\n\s*\r</code></td></tr><tr><td style="text-align:center">邮箱地址</td><td style="text-align:left"><code>/.+@.+\.[a-z]+/</code></td></tr><tr><td style="text-align:center">手机号</td><td style="text-align:left">`^1(3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9)\d{9}$`</td></tr><tr><td style="text-align:center">邮政编码</td><td style="text-align:left"><code>[1-9]\d{5}(?!\d)</code></td></tr><tr><td style="text-align:center">身份证号</td><td style="text-align:left"><code>^(\d{6})(\d{4})(\d{2})(\d{2})(\d{3})([0-9]</code></td></tr><tr><td style="text-align:center">通用时间</td><td style="text-align:left">`(20\d{2}([.-/</td><td>年月\s]{1,3}\d{1,2}){2}日?(\s?\d{2}:\d{2}(:\d{2})?)?)</td><td>(\d{1,2}\s?(分钟</td><td>小时</td><td>天))`</td></tr><tr><td style="text-align:center">整数</td><td style="text-align:left"><code>^-?[1-9]\d*$</code></td></tr><tr><td style="text-align:center">域名</td><td style="text-align:left">`^((http://)</td><td>(https://))?(a-zA-Z0-9?.)+[a-zA-Z]{2,6}(/)`</td></tr><tr><td style="text-align:center">IP</td><td style="text-align:left">`((?:(?:25[0-5]</td><td>2[0-4]\d</td><td>[01]?\d?\d).){3}(?:25[0-5]</td><td>2[0-4]\d</td><td>[01]?\d?\d))`</td></tr><tr><td style="text-align:center">HH:mm:ss</td><td style="text-align:left">`([0-1][0-9]</td><td>2[0-3]):([0-5][0-9]):([0-5][0-9])`</td></tr></tbody></table><p>以上是整理的一些正则，有错请指正！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用正则表达式&quot;&gt;&lt;a href=&quot;#常用正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常用正则表达式&quot;&gt;&lt;/a&gt;常用正则表达式&lt;/h3&gt;&lt;p&gt;开源中国提供了强大的&lt;font color=&quot;red&quot;&gt;&lt;a href=&quot;http://tool.o
      
    
    </summary>
    
    
    
      <category term="正则" scheme="https://yesong17.github.io/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>例子1</title>
    <link href="https://yesong17.github.io/2020/02/13/%E4%BE%8B%E5%AD%901/"/>
    <id>https://yesong17.github.io/2020/02/13/例子1/</id>
    <published>2020-02-13T11:09:32.000Z</published>
    <updated>2020-02-13T11:11:35.653Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-例子1"><a href="#1-例子1" class="headerlink" title="1.例子1"></a>1.例子1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div font-color=red&gt;sudu pacman -S py&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">ls -lh</span><br></pre></td></tr></table></figure><p><div align="center"><img width="500" height="500" src="https://b-ssl.duitang.com/uploads/item/201707/04/20170704113215_uAwk5.jpeg"></div></p><p><div align="center"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=30375690&auto=1&height=66"></iframe></div><br><a href="#jump">4.在页面内跳转</a><br><span id="jump"><strong>4.在页面内跳转</strong></span></p><ul><li><p>为了方便读者阅读时，还可以跳到其他页面看资料，但又不想关了本页面，就要用到这个操作了。<br><a href="http://blog.csdn.net/qq_39422642" target="_blank">跳到自己博客列表</a><br>跳到自己博客列表：<a href="http://blog.csdn.net/qq_39422642" target="_blank">http://blog.csdn.net/qq_39422642</a></p></li><li><p>设置不同的字体颜色</p></li></ul><ul><li>字体<font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font><br><font color="#00ffff" size="72">color=#00ffff</font><br><font color="gray" size="72">color=gray</font></li></ul><p>,预算,收入,花费,债务<br>June,5000,8000,4000,6000<br>July,3000,1000,4000,3000<br>Aug,5000,7000,6000,3000<br>Sep,7000,2000,3000,1000<br>Oct,6000,5000,4000,2000<br>Nov,4000,3000,5000,</p><p>type: pie<br>title: 每月收益<br>x.title: Amount<br>y.title: Month<br>y.suffix: $</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-例子1&quot;&gt;&lt;a href=&quot;#1-例子1&quot; class=&quot;headerlink&quot; title=&quot;1.例子1&quot;&gt;&lt;/a&gt;1.例子1&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yesong17.github.io/2019/11/23/Fan%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85/"/>
    <id>https://yesong17.github.io/2019/11/23/Fan主题安装/</id>
    <published>2019-11-23T14:45:11.762Z</published>
    <updated>2019-11-24T05:48:54.917Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1 align="center">Fan</h1><p></p><p align="center">这是一个深色主题，如梦幻般的星空，群星闪烁。</p><p><a href="https://www.lvfan.xyz/" target="_blank" rel="noopener">Preview</a>   </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/fan-lv/Fan.git themes/Fan</span><br></pre></td></tr></table></figure><p>修改位于博客根目录下的<code>_config.yml</code>内的<code>theme</code>选项值为<code>Fan</code></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/Fan</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="需要的依赖包"><a href="#需要的依赖包" class="headerlink" title="需要的依赖包"></a>需要的依赖包</h2><ul><li>hexo-renderer-jade</li><li>hexo-renderer-stylus</li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li>如果报错 appId undefined,需要把 themes-&gt;_config.yml 中 algolia_search:enable 改成 false</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>支持文章置顶功能，在需要置顶的文章加入 top: 1，数值越大越靠前。</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener">MIT</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;Fan&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;这是一个深色主题，如梦幻般的星空，群星闪烁。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.lvfan.xyz/&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello O PiKaQiu</title>
    <link href="https://yesong17.github.io/2019/09/05/Hello-O-PiKaQiu/"/>
    <id>https://yesong17.github.io/2019/09/05/Hello-O-PiKaQiu/</id>
    <published>2019-09-05T03:41:09.000Z</published>
    <updated>2019-09-05T03:41:09.140Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>O My World</title>
    <link href="https://yesong17.github.io/2019/09/05/My-world/"/>
    <id>https://yesong17.github.io/2019/09/05/My-world/</id>
    <published>2019-09-05T02:32:35.689Z</published>
    <updated>2019-09-05T02:37:14.502Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h1 id="Dlgfdfds-dsffr-btgtg"><a href="#Dlgfdfds-dsffr-btgtg" class="headerlink" title="Dlgfdfds dsffr btgtg"></a>Dlgfdfds dsffr btgtg</h1><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Gdajndka"><a href="#Gdajndka" class="headerlink" title="Gdajndka"></a>Gdajndka</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yesong17.github.io/2019/05/01/hello-world/"/>
    <id>https://yesong17.github.io/2019/05/01/hello-world/</id>
    <published>2019-05-01T09:47:45.650Z</published>
    <updated>2019-09-05T09:29:44.876Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;ls -lh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
